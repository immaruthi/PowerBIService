SELECT DataEntry.TestName AS [Test name], DataEntry.ProjectPhase AS [Project phase], DataEntry.Program_SKU AS [Program & SKU], DataEntryDefect.Remark AS Remark, Load.Media_Orientation AS [Media Orientation], Media.LoadDirection AS [Load Direction], DataEntry.Shift AS Shift, DataEntry.TestDate AS [Date], DataEntry.TesterEmpName AS Tester, DataEntry.Bank AS Bank, DataEntry.TestCondition AS [Test Condition], DataEntry.[Group] AS [Group], DataEntry.Unit AS Unit, DataEntry.Input_Tray AS Input_Tray, DataEntry.Firmware AS Firmware, DataEntry.TestMode AS [Test mode], DataEntry.ScanResolution AS [Scan Resolution], DataEntry.PaperMode AS [Paper Mode], DataEntry.OutputQuality AS [Output Quality], DataEntry.Round AS Round, LOAD.LoadNumber AS [Load Number], LOAD.RunNumber AS [Run Number], LOAD.Plot AS Plot, Media.MediaCat AS [Media Cat], Media.MediaNo AS [Media No], Media.MediaRegion AS [Media Region], Media.MediaType AS [Media Type], Media.MediaName AS [Media Name], Media.Weight AS Weight, Media.Size AS [Size], LOAD.LoadQuantity AS [Load Quantity], LOAD.StackHeight AS [Stack Height], LOAD.Tpages AS Tpages, LOAD.Tsheets AS Tsheets, LOAD.TargetType AS TargetType, DataEntry.CheckerEmpName AS Checker, Sum(IIf(DataEntryDefect.Defect = 'NP_Top', 1, 0)) AS NP_Top, Sum(IIf(DataEntryDefect.Defect = 'NP_Middle', 1, 0)) AS NP_Middle, Sum(IIf(DataEntryDefect.Defect = 'NP_Bottom', 1, 0)) AS NP_Bottom, Sum(IIf(DataEntryDefect.Defect = 'NP_Bottom2', 1, 0)) AS NP_Bottom2, Sum(IIf(DataEntryDefect.Defect = 'NP_Last Page', 1, 0)) AS NP_LastPage, Sum(IIf(DataEntryDefect.Defect = 'MP_Top', 1, 0)) AS MP_Top, Sum(IIf(DataEntryDefect.Defect = 'MP_Middle', 1, 0)) AS MP_Middle, Sum(IIf(DataEntryDefect.Defect = 'MP_Bottom', 1, 0)) AS MP_Bottom, Sum(IIf(DataEntryDefect.Defect = 'MP_Bottom2', 1, 0)) AS MP_Bottom2, Sum(IIf(DataEntryDefect.Defect = 'MP_LastPage', 1, 0)) AS MP_LastPage, Sum(IIf(DataEntryDefect.Defect = 'Ink Smear Minor_S1', 1, 0)) AS [Ink Smear Minor_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Smear Moderate_S1', 1, 0)) AS [Ink Smear Moderate_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Smear Severe_S1', 1, 0)) AS [Ink Smear Severe_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Smear Minor_S2', 1, 0)) AS [Ink Smear Minor_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Smear Moderate_S2', 1, 0)) AS [Ink Smear Moderate_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Smear Severe_S2', 1, 0)) AS [Ink Smear Severe_S2], Sum(IIf(DataEntryDefect.Defect = 'Back of Page Rib Smear_S1', 1, 0)) AS [Back of Page Rib Smear_S1], Sum(IIf(DataEntryDefect.Defect = 'Back of Page Rib Smear_S2', 1, 0)) AS [Back of Page Rib Smear_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Transfer_S1', 1, 0)) AS [Ink Transfer_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Transfer_S2', 1, 0)) AS [Ink Transfer_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Stain_Minor_S1', 1, 0)) AS [Ink Stain_Minor_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Stain_Moderate_S1', 1, 0)) AS [Ink Stain_Moderate_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Stain_Severe_S1', 1, 0)) AS [Ink Stain_Severe_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Stain_Minor_S2', 1, 0)) AS [Ink Stain_Minor_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Stain_Moderate_S2', 1, 0)) AS [Ink Stain_Moderate_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Stain_Severe_S2', 1, 0)) AS [Ink Stain_Severe_S2], Sum(IIf(DataEntryDefect.Defect = 'Rib Stain_S1', 1, 0)) AS [Rib Stain_S1], Sum(IIf(DataEntryDefect.Defect = 'Rib Stain_S2', 1, 0)) AS [Rib Stain_S2], Sum(IIf(DataEntryDefect.Defect = 'Aerosol Overspray_S1', 1, 0)) AS [Aerosol Overspray_S1], Sum(IIf(DataEntryDefect.Defect = 'Aerosol Overspray_S2', 1, 0)) AS [Aerosol Overspray_S2], Sum(IIf(DataEntryDefect.Defect = 'Minor Carriage Smear_TOF_S1', 1, 0)) AS [Minor Carriage Smear_TOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Moderate Carriage Smear_TOF_S1', 1, 0)) AS [Moderate Carriage Smear_TOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Severe Carriage Smear_TOF_S1', 1, 0)) AS [Severe Carriage Smear_TOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Minor Carriage Smear_MOF_S1', 1, 0)) AS [Minor Carriage Smear_MOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Moderate Carriage Smear_MOF_S1', 1, 0)) AS [Moderate Carriage Smear_MOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Severe Carriage Smear_MOF_S1', 1, 0)) AS [Severe Carriage Smear_MOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Minor Carriage Smear_BOF_S1', 1, 0)) AS [Minor Carriage Smear_BOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Moderate Carriage Smear_BOF_S1', 1, 0)) AS [Moderate Carriage Smear_BOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Severe Carriage Smear_BOF_S1', 1, 0)) AS [Severe Carriage Smear_BOF_S1], Sum(IIf(DataEntryDefect.Defect = 'Minor Carriage Smear_TOF_S2', 1, 0)) AS [Minor Carriage Smear_TOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Moderate Carriage Smear_TOF_S2', 1, 0)) AS [Moderate Carriage Smear_TOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Severe Carriage Smear_TOF_S2', 1, 0)) AS [Severe Carriage Smear_TOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Minor Carriage Smear_MOF_S2', 1, 0)) AS [Minor Carriage Smear_MOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Moderate Carriage Smear_MOF_S2', 1, 0)) AS [Moderate Carriage Smear_MOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Severe Carriage Smear_MOF_S2', 1, 0)) AS [Severe Carriage Smear_MOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Minor Carriage Smear_BOF_S2', 1, 0)) AS [Minor Carriage Smear_BOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Moderate Carriage Smear_BOF_S2', 1, 0)) AS [Moderate Carriage Smear_BOF_S2], Sum(IIf(DataEntryDefect.Defect = 'Severe Carriage Smear_BOF_S2', 1, 
                         0)) AS [Severe Carriage Smear_BOF_S2], Sum(IIf(DataEntryDefect.Defect = 'TOF_A>B_S1', 1, 0)) AS [TOF_A>B_S1], Sum(IIf(DataEntryDefect.Defect = 'SOF_C>A_S1', 1, 0)) AS [SOF_C>A_S1], Sum(IIf(DataEntryDefect.Defect = 'TOF+SOF_A>B + C>A_S1', 1, 0)) AS [TOF+SOF_A>B + C>A_S1], Sum(IIf(DataEntryDefect.Defect = 'Feed Skew_C>D_S1', 1, 0)) AS [Feed Skew_C>D_S1], Sum(IIf(DataEntryDefect.Defect = 'TOF_B>A_S1', 1, 0)) AS [TOF_B>A_S1], Sum(IIf(DataEntryDefect.Defect = 'SOF_A>C_S1', 1, 0)) AS [SOF_A>C_S1], Sum(IIf(DataEntryDefect.Defect = 'TOF+SOF_B>A + A>C_S1', 1, 0)) AS [TOF+SOF_B>A + A>C_S1], Sum(IIf(DataEntryDefect.Defect = 'Feed Skew_D>C_S1', 1, 0)) AS [Feed Skew_D>C_S1], Sum(IIf(DataEntryDefect.Defect = 'TOF_A>B_S2', 1, 0)) AS [TOF_A>B_S2], Sum(IIf(DataEntryDefect.Defect = 'SOF_C>A_S2', 1, 0)) AS [SOF_C>A_S2], Sum(IIf(DataEntryDefect.Defect = 'Feed Skew_C>D_S2', 1, 0)) AS [Feed Skew_C>D_S2], Sum(IIf(DataEntryDefect.Defect = 'TOF+SOF_A>B + C>A_S2', 1, 0)) AS [TOF+SOF_A>B + C>A_S2], Sum(IIf(DataEntryDefect.Defect = 'TOF_B>A_S2', 1, 0)) AS [TOF_B>A_S2], Sum(IIf(DataEntryDefect.Defect = 'SOF_A>C_S2', 1, 0)) AS [SOF_A>C_S2], Sum(IIf(DataEntryDefect.Defect = 'TOF+SOF_B>A + A>C_S2', 1, 0)) AS [TOF+SOF_B>A + A>C_S2], Sum(IIf(DataEntryDefect.Defect = 'Feed Skew_D>C_S2', 1, 0)) AS [Feed Skew_D>C_S2], Sum(IIf(DataEntryDefect.Defect = 'Printer Hang', 1, 0)) AS [Printer Hang], Sum(IIf(DataEntryDefect.Defect = 'Carriage Stall', 1, 0)) AS [Carriage Stall], Sum(IIf(DataEntryDefect.Defect = 'Carriage Jam', 1, 0)) AS [Carriage Jam], Sum(IIf(DataEntryDefect.Defect = 'False Paper Jam', 1, 0)) AS [False Paper Jam], Sum(IIf(DataEntryDefect.Defect = 'Blank Page Eject', 1, 0)) AS [Blank Page Eject], Sum(IIf(DataEntryDefect.Defect = 'Abnormal Noise (PM)', 1, 0)) AS [Abnormal Noise (PM)], Sum(IIf(DataEntryDefect.Defect = 'Error Page (Corrupted Printout)', 1, 0)) AS [Error Page (Corrupted Printout)], Sum(IIf(DataEntryDefect.Defect = 'Ink supplies issue (Cannot detect Ink Supply)', 1, 0)) AS [Ink supplies issue (Cannot detect Ink Supply)], Sum(IIf(DataEntryDefect.Defect = 'Missing Bottom Line_S2', 1, 0)) AS [Missing Bottom Line_S2], Sum(IIf(DataEntryDefect.Defect = 'Missing Bottom Line_S1', 1, 0)) AS [Missing Bottom Line_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Drops', 1, 0)) AS [Ink Drops], Sum(IIf(DataEntryDefect.Defect = 'Mottling _S1', 1, 0)) AS [Mottling _S1], Sum(IIf(DataEntryDefect.Defect = 'Mottling _S2', 1, 0)) AS [Mottling _S2], Sum(IIf(DataEntryDefect.Defect = 'Pen Alignment_S1', 1, 0)) AS [Pen Alignment_S1], Sum(IIf(DataEntryDefect.Defect = 'Pen Alignment_S2', 1, 0)) AS [Pen Alignment_S2], Sum(IIf(DataEntryDefect.Defect = 'Service Stall', 1, 0)) AS [Service Stall], Sum(IIf(DataEntryDefect.Defect = 'Decap S1', 1, 0)) AS [Decap S1], Sum(IIf(DataEntryDefect.Defect = 'Decap S2', 1, 0)) AS [Decap S2], Sum(IIf(DataEntryDefect.Defect = 'Red Line', 1, 0)) AS [Red Line], Sum(IIf(DataEntryDefect.Defect = 'Image Shift_S1', 1, 0)) AS [Image Shift_S1], Sum(IIf(DataEntryDefect.Defect = 'Image Shift_S2', 1, 0)) AS [Image Shift_S2], Sum(IIf(DataEntryDefect.Defect = 'Incomplete Printing _S1', 1, 0)) AS [Incomplete Printing _S1], Sum(IIf(DataEntryDefect.Defect = 'Incomplete Printing _S2', 1, 0)) AS [Incomplete Printing _S2], Sum(IIf(DataEntryDefect.Defect = 'Horizontal Banding_S1', 1, 0)) AS [Horizontal Banding_S1], Sum(IIf(DataEntryDefect.Defect = 'Vertical Banding_S1', 1, 0)) AS [Vertical Banding_S1], Sum(IIf(DataEntryDefect.Defect = 'Double Vision_S1', 1, 0)) AS [Double Vision_S1], Sum(IIf(DataEntryDefect.Defect = 'Bidi Misalignment_S1', 1, 0)) AS [Bidi Misalignment_S1], Sum(IIf(DataEntryDefect.Defect = 'White SBB_S1', 1, 
                         0)) AS [White SBB_S1], Sum(IIf(DataEntryDefect.Defect = 'Dark SBB_S1', 1, 0)) AS [Dark SBB_S1], Sum(IIf(DataEntryDefect.Defect = 'MOFTE_S1', 1, 0)) AS MOFTE_S1, Sum(IIf(DataEntryDefect.Defect = 'BOFTE_S1', 1, 0)) AS BOFTE_S1, Sum(IIf(DataEntryDefect.Defect = 'Hue Shift_S1', 1, 0)) AS [Hue Shift_S1], Sum(IIf(DataEntryDefect.Defect = 'Gradient Banding_S1', 1, 0)) AS [Gradient Banding_S1], Sum(IIf(DataEntryDefect.Defect = 'Nozzle Out_S1', 1, 0)) AS [Nozzle Out_S1], Sum(IIf(DataEntryDefect.Defect = 'Colour Mixing_S1', 1, 0)) AS [Colour Mixing_S1], Sum(IIf(DataEntryDefect.Defect = 'Fuzzy Text_S1', 1, 0)) AS [Fuzzy Text_S1], Sum(IIf(DataEntryDefect.Defect = 'Ink Starvation_S1', 1, 0)) AS [Ink Starvation_S1], Sum(IIf(DataEntryDefect.Defect = 'Additional Print Line_S1', 1, 0)) AS [Additional Print Line_S1], Sum(IIf(DataEntryDefect.Defect = 'Horizontal Banding_S2', 1, 0)) AS [Horizontal Banding_S2], Sum(IIf(DataEntryDefect.Defect = 'Vertical Banding_S2', 1, 0)) AS [Vertical Banding_S2], Sum(IIf(DataEntryDefect.Defect = 'Double Vision_S2', 1, 0)) AS [Double Vision_S2], Sum(IIf(DataEntryDefect.Defect = 'Bidi Misalignment_S2', 1, 0)) AS [Bidi Misalignment_S2], Sum(IIf(DataEntryDefect.Defect = 'White SBB_S2', 1, 
                         0)) AS [White SBB_S2], Sum(IIf(DataEntryDefect.Defect = 'Dark SBB_S2', 1, 0)) AS [Dark SBB_S2], Sum(IIf(DataEntryDefect.Defect = 'MOFTE_S2', 1, 0)) AS MOFTE_S2, Sum(IIf(DataEntryDefect.Defect = 'BOFTE_S2', 1, 0)) AS BOFTE_S2, Sum(IIf(DataEntryDefect.Defect = 'Hue Shift_S2', 1, 0)) AS [Hue Shift_S2], Sum(IIf(DataEntryDefect.Defect = 'Gradient Banding_S2', 1, 0)) AS [Gradient Banding_S2], Sum(IIf(DataEntryDefect.Defect = 'Nozzle Out_S2', 1, 0)) AS [Nozzle Out_S2], Sum(IIf(DataEntryDefect.Defect = 'Colour Mixing_S2', 1, 0)) AS [Colour Mixing_S2], Sum(IIf(DataEntryDefect.Defect = 'Fuzzy Text_S2', 1, 0)) AS [Fuzzy Text_S2], Sum(IIf(DataEntryDefect.Defect = 'Ink Starvation_S2', 1, 0)) AS [Ink Starvation_S2], Sum(IIf(DataEntryDefect.Defect = 'Additional Print Line_S2', 1, 0)) AS [Additional Print Line_S2], Sum(IIf(DataEntryDefect.Defect = 'Vertical K bar_S1', 1, 0)) AS [Vertical K bar_S1], Sum(IIf(DataEntryDefect.Defect = 'Vertical K bar_S2', 1, 0)) AS [Vertical K bar_S2], Sum(IIf(DataEntryDefect.Defect = 'E0 Unusable Cartridge', 1, 0)) AS [E0 Unusable Cartridge], Sum(IIf(DataEntryDefect.Defect = 'E1 Size Mismatch Error', 1, 0)) AS [E1 Size Mismatch Error], Sum(IIf(DataEntryDefect.Defect = 'E2 Sensor/Length Mismatch Error', 1, 0)) AS [E2 Sensor/Length Mismatch Error], Sum(IIf(DataEntryDefect.Defect = 'E3 Carriage Stall', 1, 0)) AS [E3 Carriage Stall], Sum(IIf(DataEntryDefect.Defect = 'E4 Paper Jam', 1, 0)) AS [E4 Paper Jam], Sum(IIf(DataEntryDefect.Defect = 'E5 Scanner Failue', 1, 0)) AS [E5 Scanner Failue], Sum(IIf(DataEntryDefect.Defect = 'E6 General Printer Error', 1, 0)) AS [E6 General Printer Error], Sum(IIf(DataEntryDefect.Defect = 'E9 Update Error', 1, 0)) AS [E9 Update Error], Sum(IIf(DataEntryDefect.Defect = 'PJ_S1_Z1', 1, 0)) AS PJ_S1_Z1, Sum(IIf(DataEntryDefect.Defect = 'PJ_S1_Z2', 1, 0)) AS PJ_S1_Z2, Sum(IIf(DataEntryDefect.Defect = 'PJ_S1_Z3', 1, 0)) AS PJ_S1_Z3, Sum(IIf(DataEntryDefect.Defect = 'PJ_S1_Z4', 1, 0)) AS PJ_S1_Z4, Sum(IIf(DataEntryDefect.Defect = 'PJ_S1_Z5', 1, 0)) AS PJ_S1_Z5, Sum(IIf(DataEntryDefect.Defect = 'PS_S1_Z1', 1, 0)) AS PS_S1_Z1, Sum(IIf(DataEntryDefect.Defect = 'PS_S1_Z2', 1, 0)) AS PS_S1_Z2, Sum(IIf(DataEntryDefect.Defect = 'PS_S1_Z3', 1, 0)) AS PS_S1_Z3, Sum(IIf(DataEntryDefect.Defect = 'PS_S1_Z4', 1, 0)) AS PS_S1_Z4, Sum(IIf(DataEntryDefect.Defect = 'PS_S1_Z5', 1, 0)) AS PS_S1_Z5, Sum(IIf(DataEntryDefect.Defect = 'PJ_S2_Z1', 1, 0)) AS PJ_S2_Z1, Sum(IIf(DataEntryDefect.Defect = 'PJ_S2_Z2', 1, 0)) AS PJ_S2_Z2, Sum(IIf(DataEntryDefect.Defect = 'PJ_S2_Z3', 1, 0)) AS PJ_S2_Z3, Sum(IIf(DataEntryDefect.Defect = 'PJ_S2_Z4', 1, 0)) AS PJ_S2_Z4, Sum(IIf(DataEntryDefect.Defect = 'PJ_S2_Z5', 1, 0)) AS PJ_S2_Z5, Sum(IIf(DataEntryDefect.Defect = 'PS_S2_Z1', 1, 0)) AS PS_S2_Z1, Sum(IIf(DataEntryDefect.Defect = 'PS_S2_Z2', 1, 0)) AS PS_S2_Z2, Sum(IIf(DataEntryDefect.Defect = 'PS_S2_Z3', 1, 0)) AS PS_S2_Z3, Sum(IIf(DataEntryDefect.Defect = 'PS_S2_Z4', 1, 0)) AS PS_S2_Z4, Sum(IIf(DataEntryDefect.Defect = 'PS_S2_Z5', 1, 0)) AS PS_S2_Z5, Sum(IIf(DataEntryDefect.Defect = 'Tear_S1', 1, 0)) AS Tear_S1, Sum(IIf(DataEntryDefect.Defect = 'Tear_S2', 1, 0)) AS Tear_S2, Sum(IIf(DataEntryDefect.Defect = 'TP_Top', 1, 0)) AS TP_Top, Sum(IIf(DataEntryDefect.Defect = 'TP_Middle', 1, 0)) AS TP_Middle, Sum(IIf(DataEntryDefect.Defect = 'TP_Bottom', 1, 0)) AS TP_Bottom, Sum(IIf(DataEntryDefect.Defect = 'TP_Bottom2', 1, 0)) AS TP_Bottom2, Sum(IIf(DataEntryDefect.Defect = 'TP_LastPage', 1, 0)) AS TP_LastPage, Sum(IIf(DataEntryDefect.Defect = 'Paper Sailing', 1, 0)) AS [Paper Sailing], Sum(IIf(DataEntryDefect.Defect = 'Bull Dozing', 1, 0)) AS [Bull Dozing], Sum(IIf(DataEntryDefect.Defect = 'Paper Out Of Order', 1, 0)) AS [Paper Out Of Order], Sum(IIf(DataEntryDefect.Defect = 'Media Sucked Back', 1, 0)) AS [Media Sucked Back], Sum(IIf(DataEntryDefect.Defect = 'Paper Not Fully Eject', 
                         1, 0)) AS [Paper Not Fully Eject], Sum(IIf(DataEntryDefect.Defect = 'Paper Curl', 1, 0)) AS [Paper Curl], Sum(IIf(DataEntryDefect.Defect = 'Messy Output', 1, 0)) AS [Messy Output], Sum(IIf(DataEntryDefect.Defect = 'Fallen Sheet', 1, 
                         0)) AS [Fallen Sheet], Sum(IIf(DataEntryDefect.Defect = 'Obvious Skew_S1', 1, 0)) AS [Obvious Skew_S1], Sum(IIf(DataEntryDefect.Defect = 'Obvious Skew_S2', 1, 0)) AS [Obvious Skew_S2], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift up_S1', 1, 0)) AS [Margin Shift up_S1], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift left_S1', 1, 0)) AS [Margin Shift left_S1], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift right_S1', 
                         1, 0)) AS [Margin Shift right_S1], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift down_S1', 1, 0)) AS [Margin Shift down_S1], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift up_S2', 1, 0)) AS [Margin Shift up_S2], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift left_S2', 1, 0)) AS [Margin Shift left_S2], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift right_S2', 1, 0)) AS [Margin Shift right_S2], Sum(IIf(DataEntryDefect.Defect = 'Margin Shift down_S2', 1, 0)) AS [Margin Shift down_S2], Sum(IIf(DataEntryDefect.Defect = 'Dent (Left)_S1', 1, 0)) AS [Dent (Left)_S1], Sum(IIf(DataEntryDefect.Defect = 'Dent (Center)_S1', 1, 0)) AS [Dent (Center)_S1], Sum(IIf(DataEntryDefect.Defect = 'Dent (Right)_S1', 1, 0)) AS [Dent (Right)_S1], Sum(IIf(DataEntryDefect.Defect = 'Corner Folding (Left)_S1', 1, 0)) AS [Corner Folding (Left)_S1], Sum(IIf(DataEntryDefect.Defect = 'Corner Folding (Right)_S1', 1, 0)) AS [Corner Folding (Right)_S1], Sum(IIf(DataEntryDefect.Defect = 'Peeling_S1', 1, 0)) AS Peeling_S1, Sum(IIf(DataEntryDefect.Defect = 'Starwheel Damage_S1', 1, 
                         0)) AS [Starwheel Damage_S1], Sum(IIf(DataEntryDefect.Defect = 'Vertical Scratch_S1', 1, 0)) AS [Vertical Scratch_S1], Sum(IIf(DataEntryDefect.Defect = 'Horizontal Scratch_S1', 1, 0)) AS [Horizontal Scratch_S1], Sum(IIf(DataEntryDefect.Defect = 'Folding/Crease Line_S1', 1, 0)) AS [Folding/Crease Line_S1], Sum(IIf(DataEntryDefect.Defect = 'Envelope Dent_S1', 1, 0)) AS [Envelope Dent_S1], Sum(IIf(DataEntryDefect.Defect = 'Envelope Flap Carriage Smear_S1', 1, 0)) AS [Envelope Flap Carriage Smear_S1], Sum(IIf(DataEntryDefect.Defect = 'Roller Mark_S1', 1, 0)) AS [Roller Mark_S1], Sum(IIf(DataEntryDefect.Defect = 'Pick Tire Mark_S1', 1, 0)) AS [Pick Tire Mark_S1], Sum(IIf(DataEntryDefect.Defect = 'Dent (Left)_S2', 1, 0)) AS [Dent (Left)_S2], Sum(IIf(DataEntryDefect.Defect = 'Dent (Center)_S2', 1, 0)) AS [Dent (Center)_S2], Sum(IIf(DataEntryDefect.Defect = 'Dent (Right)_S2', 1, 0)) AS [Dent (Right)_S2], Sum(IIf(DataEntryDefect.Defect = 'Corner Folding (Left)_S2', 1, 0)) AS [Corner Folding (Left)_S2], Sum(IIf(DataEntryDefect.Defect = 'Corner Folding (Right)_S2', 1, 0)) AS [Corner Folding (Right)_S2], Sum(IIf(DataEntryDefect.Defect = 'Peeling_S2', 1, 0)) AS Peeling_S2, Sum(IIf(DataEntryDefect.Defect = 'Starwheel Damage_S2', 1, 
                         0)) AS [Starwheel Damage_S2], Sum(IIf(DataEntryDefect.Defect = 'Vertical Scratch_S2', 1, 0)) AS [Vertical Scratch_S2], Sum(IIf(DataEntryDefect.Defect = 'Horizontal Scratch_S2', 1, 0)) AS [Horizontal Scratch_S2], Sum(IIf(DataEntryDefect.Defect = 'Folding/Crease Line_S2', 1, 0)) AS [Folding/Crease Line_S2], Sum(IIf(DataEntryDefect.Defect = 'Envelope Dent_S2', 1, 0)) AS [Envelope Dent_S2], Sum(IIf(DataEntryDefect.Defect = 'Envelope Flap Carriage Smear_S2', 1, 0)) AS [Envelope Flap Carriage Smear_S2], Sum(IIf(DataEntryDefect.Defect = 'Roller Mark_S2', 1, 0)) AS [Roller Mark_S2], Sum(IIf(DataEntryDefect.Defect = 'Pick Tire Mark_S2', 1, 0)) AS [Pick Tire Mark_S2], Sum(IIf(DataEntryDefect.Defect = 'ASSERT_0xb875316a', 1, 0)) AS ASSERT_0xb875316a, Sum(IIf(DataEntryDefect.Defect = 'ASSERT_0x034b248b xm_cm_keywords_servo_cpp', 1, 0)) AS [ASSERT_0x034b248b xm_cm_keywords_servo_cpp], Sum(IIf(DataEntryDefect.Defect = 'GPE_05C Duplex load error paper didn’t reach oops', 1, 0)) AS [GPE_05C Duplex load error paper didn’t reach oops], Sum(IIf(DataEntryDefect.Defect = 'GPE_066 Paper eject duplex failure too long', 1, 0)) AS [GPE_066 Paper eject duplex failure too long], Sum(IIf(DataEntryDefect.Defect = 'GPE_067 Paper eject failed to clear paper', 1, 0)) AS [GPE_067 Paper eject failed to clear paper], Sum(IIf(DataEntryDefect.Defect = 'GPE_BF0 GPE_VERT_POSITION_NOT_GTE_PAPER_POSITION', 1, 0)) AS [GPE_BF0 GPE_VERT_POSITION_NOT_GTE_PAPER_POSITION]
FROM ((DataEntryDefect INNER JOIN DataEntry ON DataEntryDefect.DataEntryID = DataEntry.ID) INNER JOIN LOAD ON DataEntryDefect.LoadID = LOAD.ID) INNER JOIN Media ON LOAD.MediaNo = Media.MediaNo
GROUP BY DataEntry.TestName, DataEntry.ProjectPhase, DataEntry.Program_SKU, DataEntry.Shift, DataEntry.TestDate, DataEntry.TesterEmpName, DataEntry.Bank, DataEntry.TestCondition, DataEntry.Group, DataEntry.Unit, DataEntry.Input_Tray, DataEntry.Firmware, DataEntry.TestMode, DataEntry.ScanResolution, DataEntry.PaperMode, DataEntry.OutputQuality, DataEntry.Round, LOAD.LoadNumber, LOAD.RunNumber, LOAD.Plot, Media.MediaCat, Media.MediaNo, Media.MediaRegion, Media.MediaType, Media.MediaName, Media.Weight, Media.Size, LOAD.LoadQuantity, LOAD.StackHeight, LOAD.Tpages, LOAD.Tsheets, LOAD.TargetType, DataEntry.CheckerEmpName, DataEntryDefect.Defect, DataEntry.LoadQuantity, DataEntry.RunNumber, LOAD.Media_Orientation, Media.LoadDirection, DataEntry.LoadNumber, LOAD.Round, LOAD.OutputQuality, DataEntryDefect.Remark, DataEntryDefect.LoadID;
